services:
  catalog_service_mongodb:
    container_name: mongodb
    image: mongo:6.0.13-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: viepovsky
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: catalog
    volumes:
      - mongo_volume:/var/lib/mongo
    ports:
      - 27017:27017
    networks:
      - mongo_network
    restart: unless-stopped

  catalog_service_mongo_gui:
    container_name: mongo-express
    image: mongo-express:1.0.0-18
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=viepovsky
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    volumes:
      - mongo_volume:/var/lib/express
    ports:
      - 8000:8081
    networks:
      - mongo_network
    depends_on:
      - catalog_service_mongodb
    restart: unless-stopped

  basket_service_redis:
    container_name: redis
    image: redis:6.2
    volumes:
      - redis_volume:/var/lib/redis
    ports:
      - 6379:6379
    networks:
      - redis_network
    restart: unless-stopped

  basket_service_redis_gui:
    container_name: redis_insight
    image: redislabs/redisinsight:1.14.0
    volumes:
      - redis_volume:/var/lib/redis_insight
    ports:
      - 8001:8001
    networks:
      - redis_network
    restart: unless-stopped

  order_service_postgres:
    container_name: postgres
    image: postgres:13.13
    environment:
      POSTGRES_USER: viepovsky
      POSTGRES_PASSWORD: password
      POSTGRES_DB: barber
      PGDATA: /data/postgres
    volumes:
      - postgres_volume:/data/postgres
    ports:
      - 5430:5432
    networks:
      - postgres_network
    restart: unless-stopped

  order_service_postgres_pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.2
    environment:
      PGADMIN_DEFAULT_EMAIL: viepovsky@viepovsky.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - postgres_volume:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - postgres_network
    depends_on:
      - order_service_postgres
    restart: unless-stopped

networks:
  mongo_network:
  redis_network:
  postgres_network:
    driver: bridge

volumes:
  mongo_volume:
  redis_volume:
  postgres_volume: